
MainActivity.java
package developer.tuyen.test; 
import android.content.BroadcastReceiver; 
import android.content.Context; 
import android.content.Intent; 
import android.content.IntentFilter; 
import android.net.ConnectivityManager; 
import android.net.NetworkInfo; 
import android.support.v7.app.AppCompatActivity; 
import android.os.Bundle; 
import android.widget.Button; 
import android.widget.ProgressBar; 
import android.widget.Toast; 
 
 
public class MainActivity extends AppCompatActivity { 
    CheckConnectionState checkConnectionState; 
    ProgressBar progressBar; 
    Button button; 
    Thread thread; 
    @Override 
    protected void onCreate(Bundle savedInstanceState) { 
        super.onCreate(savedInstanceState); 
        setContentView(R.layout.activity_main); 
        progressBar=findViewById(R.id.progressBar); 
        progressBar.setProgress(0); 
        checkConnectionState =new CheckConnectionState(); 
        registerReceiver(checkConnectionState,new IntentFilter("android.net.conn.CONNECTIVITY_CHANGE")); 
 
    } 
    private class CheckConnectionState extends BroadcastReceiver{ 
        @Override 
        public void onReceive(Context context, Intent intent) { 
            //Check connection. 
            ConnectivityManager cm = 
                    (ConnectivityManager)context.getSystemService(Context.CONNECTIVITY_SERVICE); 
            NetworkInfo activeNetwork = cm.getActiveNetworkInfo(); 
            boolean isConnected = activeNetwork != null && 
                    activeNetwork.isConnectedOrConnecting(); 
            if (!isConnected) { 
                //Do something 
                if (thread!=null){ 
                    thread.interrupt(); 
                } 
                Toast.makeText(context, "No connection", Toast.LENGTH_SHORT).show(); 
            }else { 
                //Do something 
                if (thread==null){ 
                    thread=someTasks(); 
                }else{ 
                    if (thread.isInterrupted()){ 
                        thread=someTasks(); 
                    } 
                } 
                Toast.makeText(context, "Connection", Toast.LENGTH_SHORT).show(); 
            } 
 
        } 
    } 
    public Thread someTasks(){ 
        Thread thread=new Thread(new Runnable() { 
            @Override 
            public void run() { 
                for (int i=1;i<6;i++){ 
                    try { 
                        Thread.sleep(2000); 
                        progressBar.setProgress(20*i); 
                    } catch (InterruptedException e) { 
                        e.printStackTrace(); 
                    } 
                } 
            } 
        }); 
        thread.start(); 
        return thread; 
    } 
    @Override 
    protected void onStop() { 
        super.onStop(); 
        if (checkConnectionState !=null){ 
            unregisterReceiver(checkConnectionState); 
        } 
 
    } 
 
} 